@use "../../css/util.scss" as *;

@mixin button-color($name) {
  @include focus-outline($name);

  &:not(.p-btn--text):not(.p-btn--outline) {
    background-color: var(--color-#{$name});
    color: #ffffff;

    &:hover {
      background-color: var(--shade-#{$name});
    }
  }
  .p-btn-group.p-btn-group--text &,
  &.p-btn--text {
    background-color: transparent;
    color: var(--color-#{$name});

    &:hover {
      background-color: var(--light-#{$name});
    }

    &:active {
      background-color: var(--color-#{$name});
      color: #ffffff;
    }
  }
  &.p-btn--outline {
    border: 2px solid var(--color-#{$name});

    &:not(.p-btn--text) {
      background-color: transparent;
      color: var(--color-#{$name});

      &:hover {
        background-color: var(--color-#{$name});
        color: #ffffff;
      }

      &:active {
        background-color: var(--shade-#{$name});
      }
    }
  }
}

.p-btn {
  @include transition(color, background-color, outline-offset);
  font-size: 1rem;
  font-weight: 600;
  padding: 0.75rem 1.25rem;
  border-radius: 6px;
  cursor: pointer;
  border: none;
  box-shadow: none;
  color: #ffffff;
  background-color: var(--color-primary);

  &.p-btn--lg,
  .p-btn-group.p-btn-group--lg & {
    font-size: 1.5rem;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
  }

  &.p-btn--md,
  .p-btn-group.p-btn-group--md & {
    font-size: 1.2rem;
    padding: 0.75rem 1.2rem;
  }

  &.p-btn--sm,
  .p-btn-group.p-btn-group--sm & {
    font-size: 0.8rem;
    padding: 0.5rem 0.75rem;
  }

  @each $name in $color-names {
    @if $name == "primary" {
      &,
      &.p-btn--#{$name},
      .p-btn-group.p-btn-group--#{$name} & {
        @include button-color($name);
      }
    } @else {
      &.p-btn--#{$name},
      .p-btn-group.p-btn-group--#{$name} & {
        @include button-color($name);
      }
    }
  }
}
